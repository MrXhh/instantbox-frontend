{"version":3,"sources":["util/api.js","util/util.js","components/SelectSystemConfig/SelectForm.js","components/SystemConfiguration/SystemConfiguration.js","components/SystemConfiguration/index.js","components/SelectSystemConfig/SelectSystemConfig.js","components/SelectSystemConfig/index.js","App.js","serviceWorker.js","index.js"],"names":["axios","defaults","baseURL","interceptors","request","use","config","err","Promise","reject","response","res","data","makeCancelable","promise","hasCanceled_","resolve","then","val","isCanceled","error","cancel","requestUrlList","getOSList","concat","getOS","rmOS","get","getOSUrl","osCode","timeout","cpu","arguments","length","undefined","mem","port","params","os","removeContainerById","containerId","shareUrl","timestamp","Math","floor","Date","getTime","setItem","key","localStorage","getItem","rmItem","removeItem","FormItem","Steps","Step","Card","Meta","Select","Option","Form","Item","rules","required","message","validator","rule","value","callback","test","SelectForm","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","getForm","form","state","inherits","createClass","getFieldDecorator","formItemLayout","labelCol","span","wrapperCol","react_default","a","createElement","es_form","layout","assign","label","initialValue","input","style","width","placeholder","React","Component","defaultProps","create","customLabel","title","display","textAlign","SystemConfiguration","getSystemVersion","_this$props","system","version","react","divider","type","_this$props2","showInnerPort","showExternalPort","innerPort","externalPort","SystemConfiguration_FormItem","toFixed","SelectSystemConfig","getCurrentStep","isExistContainer","containerInfo","JSON","parse","container","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","setState","loading","p1","sent","t0","abrupt","osList","stop","handleSelectChange","index","selectsObj","obj","handleNextStep","_this$state","currentStep","result","handlePreStep","handlePortChange","event","target","handleGetForm","_form","_values","handleCreate","validateFields","_ref2","_callee2","values","_context2","modalVisible","_x","_x2","apply","handleOk","_callee3","_this$_values","t","_this$getSystemVersio","_context3","okLoading","filter","item","p2","console","statusCode","openPort","open","skipModalVisible","stringify","timeoutH","okCallback","_shareUrl","generateStepsContent","steps","content","map","classes","classNames","isSelect","card","margin","height","className","src","logoUrl","alt","es_select","onChange","marginTop","subList","subItem","SelectSystemConfig_Option","SelectSystemConfig_SelectForm","_this$state2","selectObj","find","_this$isExistContaine","desc","_this2","_this$state3","_this$getSystemVersio2","spin","spinning","current","step","SelectSystemConfig_Step","description","es_button","disabled","onClick","modal","visible","onOk","onCancel","okText","cancelText","components_SystemConfiguration","App","subscribeEvent","typed","Typed","strings","typeSpeed","componentWillUnmount","selected","handleStartClick","handleClose","handleOSSelect","selectedOS","toConsumableArray","i","findIndex","forEach","j","handleOSVersionSelect","selectedVersion","handleSelectAgain","screenLoading","screenText","p3","handleOkCallback","_this$isExistContaine2","memory","defineProperty","dist_default","bgColor","spinnerColor","textColor","text","marginRight","tooltip","size","color","variant","window","components_SelectSystemConfig","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49835123.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// 开发环境\nif (process.env.NODE_ENV === \"development\") {\n  axios.defaults.baseURL = \"http://60.190.81.133:9010/\";\n\n  // 生产环境\n} else if (process.env.NODE_ENV === \"production\") {\n  axios.defaults.baseURL = \"http://60.190.81.133:9010/\";\n}\n\n// 请求拦截\naxios.interceptors.request.use(\n  function(config) {\n    return config;\n  },\n  function(err) {\n    return Promise.reject(err);\n  }\n);\n\n// 响应拦截\naxios.interceptors.response.use(\n  function(res) {\n    const data = res.data;\n    return data;\n    // 加上 message\n    if (data.statusCode === 1) {\n      return data;\n    } else {\n      throw Error(data.message);\n    }\n  },\n  function(err) {\n    return Promise.reject(err);\n  }\n);\n\n/**\n * 使 this.setState() 在异步请求中可以取消调用：https://reactjs.org/blog/2015/12/16/ismounted-antipattern.html\n * @param {promise} promise 请求对象\n */\nexport const makeCancelable = promise => {\n  let hasCanceled_ = false;\n\n  const wrappedPromise = new Promise((resolve, reject) => {\n    promise.then(\n      val => (hasCanceled_ ? reject({ isCanceled: true }) : resolve(val)),\n      error => (hasCanceled_ ? reject({ isCanceled: true }) : reject(error))\n    );\n  });\n  return {\n    promise: wrappedPromise,\n    cancel() {\n      hasCanceled_ = true;\n    }\n  };\n};\nconst apiVersion = \"/v2/superinspire\";\n// 请求列表\nconst requestUrlList = {\n  getOSList: `${apiVersion}/getOSList`,\n  getOS: `${apiVersion}/getOS`,\n  rmOS: `${apiVersion}/rmOS`\n};\n\n/**\n * 获取容器列表\n */\nexport const getOSList = () => {\n  return makeCancelable(axios.get(requestUrlList.getOSList));\n};\n\n/**\n * 获取容器跳转的地址\n */\nexport const getOSUrl = (osCode, timeout, cpu = 1, mem = 0.5, port = 80) => {\n  return makeCancelable(\n    axios.get(requestUrlList.getOS, {\n      params: {\n        os: osCode,\n        timeout,\n        cpu,\n        mem,\n        port\n      }\n    })\n  );\n};\n\n/**\n * 移除容器\n */\nexport const removeContainerById = (\n  containerId,\n  shareUrl,\n  timestamp = Math.floor(new Date().getTime() / 1000)\n) => {\n  return makeCancelable(\n    axios.get(requestUrlList.rmOS, {\n      params: {\n        containerId,\n        shareUrl,\n        timestamp\n      }\n    })\n  );\n};\n","const setItem = (key, val) => {\n  return localStorage.setItem(key, val);\n};\n\nconst getItem = key => {\n  return localStorage.getItem(key);\n};\n\nconst rmItem = key => {\n  return localStorage.removeItem(key);\n};\n\nexport { setItem, getItem, rmItem };\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SelectSystemConfig.scss\";\nimport classNames from \"classnames\";\nimport {\n  Spin,\n  Steps,\n  Divider,\n  message,\n  Card,\n  Select,\n  Button,\n  Input,\n  Form\n} from \"antd\";\nimport { makeCancelable, getOSList } from \"../../util/api\";\n\nconst Step = Steps.Step;\nconst { Meta } = Card;\nconst Option = Select.Option;\nconst FormItem = Form.Item;\n\nconst rules = {\n  port: [\n    {\n      required: true,\n      message: \"请输入端口号\"\n    },\n    {\n      validator: (rule, value, callback) => {\n        if (\n          (/^\\d+$/g.test(value) && value >= 1 && value <= 65535) ||\n          value === \"\"\n        ) {\n          return callback();\n        }\n        callback(\"端口号格式或范围有误\");\n      },\n      message: \"端口号范围： 1 ~ 65535\"\n    }\n  ],\n  cpu: [\n    {\n      required: true,\n      message: \"请输入 CPU 核数\"\n    },\n    {\n      validator: (rule, value, callback) => {\n        if (\n          (/^\\d+$/g.test(value) && value >= 1 && value <= 4) ||\n          value === \"\"\n        ) {\n          return callback();\n        }\n        callback(\"CPU 格式或范围有误\");\n      },\n      message: \"CPU 范围：1 ~ 4\"\n    }\n  ],\n  mem: [\n    {\n      required: true,\n      message: \"请输入空间大小\"\n    },\n    {\n      validator: (rule, value, callback) => {\n        if (\n          (/^\\d+$/g.test(value) && value >= 1 && value <= 3584) ||\n          value === \"\"\n        ) {\n          return callback();\n        }\n        callback(\"空间大小格式或范围有误\");\n      },\n      message: \"空间大小范围：1 ~ 3584\"\n    }\n  ],\n  timeout: [\n    {\n      required: true,\n      message: \"请输入使用时长\"\n    },\n    {\n      validator: (rule, value, callback) => {\n        if (\n          (/^\\d+$/g.test(value) && value >= 1 && value <= 24) ||\n          value === \"\"\n        ) {\n          return callback();\n        }\n        callback(\"使用时长格式或范围有误\");\n      },\n      message: \"使用时长范围：1 ~ 24\"\n    }\n  ]\n};\n\n/**\n * 填写系统性能参数的表单\n */\nexport class SelectForm extends React.Component {\n  static propTypes = {};\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  componentDidMount = () => {\n    this.props.getForm && this.props.getForm(this.props.form);\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 10 },\n      wrapperCol: { span: 14 }\n    };\n    return (\n      <Form layout=\"horizontal\">\n        <FormItem label=\"端口号\" {...formItemLayout}>\n          {getFieldDecorator(\"port\", {\n            initialValue: \"80\",\n            rules: rules.port\n          })(<Input style={{ width: 200 }} placeholder=\"如：80\" />)}\n        </FormItem>\n        <FormItem label=\"CPU 核数\" {...formItemLayout}>\n          {getFieldDecorator(\"cpu\", {\n            initialValue: \"1\",\n            rules: rules.cpu\n          })(<Input style={{ width: 200 }} placeholder=\"如：1\" />)}\n        </FormItem>\n        <FormItem label=\"空间大小（M）\" {...formItemLayout}>\n          {getFieldDecorator(\"mem\", {\n            initialValue: \"512\",\n            rules: rules.mem\n          })(<Input style={{ width: 200 }} placeholder=\"如：512\" />)}\n        </FormItem>\n        <FormItem label=\"使用时长（h）\" {...formItemLayout}>\n          {getFieldDecorator(\"timeout\", {\n            initialValue: \"24\",\n            rules: rules.timeout\n          })(<Input style={{ width: 200 }} placeholder=\"如：24\" />)}\n        </FormItem>\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(SelectForm);\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SystemConfiguration.scss\";\n\nimport { Divider, Form } from \"antd\";\nconst formItemLayout = {\n  labelCol: { span: 12 },\n  wrapperCol: { span: 12 }\n};\nconst FormItem = Form.Item;\n\nconst customLabel = title => {\n  return (\n    <span style={{ display: \"inline-block\", width: 80, textAlign: \"left\" }}>\n      {title}\n    </span>\n  );\n};\n\n/**\n * 显示用户配置表单\n */\nclass SystemConfiguration extends React.Component {\n  static propTypes = {\n    /**\n     * 系统名称\n     */\n    system: PropTypes.string,\n\n    /**\n     * 系统版本号\n     */\n    version: PropTypes.string,\n\n    /**\n     * cpu 核数\n     */\n    cpu: PropTypes.string,\n\n    /**\n     * 空间大小\n     */\n    mem: PropTypes.string,\n\n    /**\n     * 使用时长\n     */\n    timeout: PropTypes.any,\n\n    /**\n     * 内部端口号\n     */\n    innerPort: PropTypes.string,\n\n    /**\n     * 外部端口号\n     */\n    externalPort: PropTypes.any,\n\n    /**\n     * 是否显示外部字段\n     * 默认：false\n     */\n    showInnerPort: PropTypes.bool,\n\n    /**\n     * 是否显示内部字段\n     * 默认：false\n     */\n    showExternalPort: PropTypes.bool\n  };\n  static defaultProps = {\n    showInnerPort: false,\n    showExternalPort: false\n  };\n\n  getSystemVersion = () => {\n    const { system, version } = this.props;\n    return (\n      <Fragment>\n        {system}\n        <Divider type=\"vertical\" />\n        {version}\n      </Fragment>\n    );\n  };\n  render() {\n    const {\n      cpu,\n      mem,\n      timeout,\n      showInnerPort,\n      showExternalPort,\n      innerPort,\n      externalPort\n    } = this.props;\n    return (\n      <Form>\n        <FormItem label={customLabel(\"系统\")} {...formItemLayout}>\n          {this.getSystemVersion()}\n        </FormItem>\n        <FormItem label={customLabel(\"端口号\")} {...formItemLayout}>\n          {innerPort}\n        </FormItem>\n        <FormItem label={customLabel(\"CPU 核数\")} {...formItemLayout}>\n          {cpu} 核\n        </FormItem>\n        <FormItem label={customLabel(\"空间大小\")} {...formItemLayout}>\n          {mem} M（{(mem / 1024).toFixed(2)} G）\n        </FormItem>\n        <FormItem label={customLabel(\"使用时长\")} {...formItemLayout}>\n          {timeout} 小时\n        </FormItem>\n        {showInnerPort && (\n          <FormItem label={customLabel(\"内部端口号\")} {...formItemLayout}>\n            {innerPort}\n          </FormItem>\n        )}\n\n        {showExternalPort && (\n          <FormItem label={customLabel(\"外部端口号\")} {...formItemLayout}>\n            {externalPort}\n          </FormItem>\n        )}\n      </Form>\n    );\n  }\n}\n\nexport default Form.create()(SystemConfiguration);\n","import SystemConfiguration from './SystemConfiguration';\nexport default SystemConfiguration;","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./SelectSystemConfig.scss\";\nimport classNames from \"classnames\";\nimport {\n  Spin,\n  Steps,\n  Divider,\n  message,\n  Card,\n  Select,\n  Button,\n  Modal\n} from \"antd\";\nimport { getOSList, getOSUrl } from \"../../util/api\";\nimport { getItem, setItem } from \"../../util/util\";\nimport SelectForm from \"./SelectForm\";\nimport SystemConfiguration from \"../SystemConfiguration\";\n\nconst Step = Steps.Step;\nconst Option = Select.Option;\n\n/**\n * 选择系统配置\n */\nexport class SelectSystemConfig extends React.Component {\n  static propTypes = {};\n  static defaultProps = {};\n\n  constructor(props) {\n    super(props);\n\n    const currentStep = this.getCurrentStep();\n    const { isExistContainer, container } = this.isExistContainer();\n\n    this.state = {\n      osList: [],\n      loading: false,\n      okLoading: false,\n      currentStep,\n      osCode: 0,\n      selectsObj: [],\n      port: \"80\",\n      modalVisible: false,\n      isExistContainer,\n      container,\n      skipModalVisible: false\n    };\n\n    this.steps = [\n      {\n        title: \"系统\",\n        desc: \"选择系统\",\n        content: \"\"\n      },\n      {\n        title: \"性能参数\",\n        desc: \"填写系统性能参数\",\n        content: \"\"\n      }\n    ];\n  }\n\n  componentDidMount = () => {\n    this.getOSList();\n  };\n\n  getCurrentStep = () => {\n    return 0;\n  };\n\n  isExistContainer = () => {\n    let containerInfo = getItem(\"containerInfo\");\n    if (!containerInfo) {\n      return { isExistContainer: false, container: {} };\n    }\n    containerInfo = JSON.parse(containerInfo);\n    const curTime = Math.floor(new Date().getTime() / 1000);\n    // 未过期\n    if (curTime < containerInfo.timeout) {\n      return { isExistContainer: true, container: containerInfo };\n    }\n  };\n\n  getOSList = async () => {\n    this.setState({ loading: true });\n    this.p1 = getOSList();\n    let res;\n    try {\n      res = await this.p1.promise;\n    } catch (err) {\n      return message.error(err.message);\n    }\n    this.setState({ loading: false, osList: res });\n  };\n\n  handleSelectChange = (value, index) => {\n    const selectsObj = [];\n    const obj = {\n      index,\n      osCode: value\n    };\n    selectsObj[index] = obj;\n    this.setState({ selectsObj });\n  };\n\n  handleNextStep = () => {\n    const { currentStep, selectsObj, port } = this.state;\n    if (currentStep === 0) {\n      if (!selectsObj.length) {\n        return message.error(\"请先选择系统和系统版本\");\n      }\n    }\n    if (currentStep === 1) {\n      const result = !/\\d./.test(port);\n\n      if (!port || result) {\n        return message.error(\"请输入正确格式的端口号\");\n      }\n    }\n    this.setState({ currentStep: this.state.currentStep + 1 });\n  };\n\n  handlePreStep = () => {\n    this.setState({ currentStep: this.state.currentStep - 1 });\n  };\n\n  handlePortChange = event => {\n    const value = event.target.value;\n    this.setState({ port: value });\n  };\n\n  handleGetForm = form => {\n    this._form = form;\n  };\n  _values = {};\n  handleCreate = () => {\n    const { validateFields } = this._form;\n    validateFields(async (err, values) => {\n      if (err) {\n        return message.error(\"性能参数有误，请重新填写\");\n      }\n      this.setState({ modalVisible: true });\n      this._values = values;\n    });\n  };\n\n  handleOk = async () => {\n    this.setState({ okLoading: true });\n    const { selectsObj } = this.state;\n    const osCode = selectsObj.filter(item => item)[0].osCode;\n    const { timeout, cpu, mem, port } = this._values;\n    const t = Math.floor(new Date().getTime() / 1000) + timeout * 60 * 60;\n    this.p2 = getOSUrl(osCode, t, cpu, mem, port);\n    if (timeout || cpu || mem || port) {\n      let res;\n      try {\n        res = await this.p2.promise;\n      } catch (err) {\n        return console.error(err);\n      }\n      if (res.shareUrl && res.containerId && res.statusCode && res.openPort) {\n        this.setState({\n          open: false,\n          container: res,\n          isExistContainer: true,\n          modalVisible: false,\n          skipModalVisible: true\n        });\n\n        const { system, version } = this.getSystemVersion();\n\n        setItem(\n          \"containerInfo\",\n          JSON.stringify({\n            system,\n            version: version,\n            port,\n            cpu,\n            mem,\n            timeout: t,\n            timeoutH: timeout,\n            innerPort: port,\n            externalPort: res.openPort,\n            shareUrl: res.shareUrl,\n            containerId: res.containerId\n          })\n        );\n        this.props.okCallback(true, {\n          shareUrl: res.shareUrl,\n          timeout: t,\n          containerId: res.containerId\n        });\n        this._shareUrl = res.shareUrl;\n      } else {\n        this.setState({ okLoading: false });\n        message.error(\"创建失败，请重试\");\n      }\n    }\n  };\n\n  generateStepsContent = () => {\n    this.steps[0].content = (\n      <Fragment>\n        {this.state.osList.map((item, index) => {\n          const { selectsObj } = this.state;\n          let osCode;\n          if (selectsObj[index]) {\n            osCode = selectsObj[index].osCode;\n          }\n          const classes = classNames({\n            isSelect: !!selectsObj[index]\n          });\n          return (\n            <Card key={item.label} style={{ width: 200, margin: \"10px 25px\" }}>\n              <div style={{ textAlign: \"center\" }}>{item.label}</div>\n              <img\n                style={{\n                  display: \"block\",\n                  width: 120,\n                  height: 120,\n                  margin: \"0 auto\"\n                }}\n                className={classes}\n                src={item.logoUrl}\n                alt={item.label}\n              />\n              <Select\n                value={osCode}\n                onChange={value => this.handleSelectChange(value, index)}\n                style={{ width: 182, marginTop: 10 }}\n                placeholder=\"请选择系统版本\"\n              >\n                {item.subList.map(subItem => (\n                  <Option key={subItem.label} value={subItem.osCode}>\n                    {subItem.label}\n                  </Option>\n                ))}\n              </Select>\n            </Card>\n          );\n        })}\n      </Fragment>\n    );\n\n    this.steps[1].content = <SelectForm getForm={this.handleGetForm} />;\n  };\n\n  getSystemVersion = () => {\n    const { selectsObj, osList } = this.state;\n    if (!selectsObj.length || !osList.length) {\n      return { system: \"\", version: \"\" };\n    }\n    const selectObj = selectsObj.filter(item => item)[0];\n\n    const subList = osList[selectObj.index].subList;\n    const systemName = osList[selectObj.index].label;\n    const systemVersion = subList.find(\n      item => item.osCode === selectObj.osCode\n    );\n    return { system: systemName, version: systemVersion.label };\n  };\n\n  render() {\n    const {\n      osList,\n      loading,\n      okLoading,\n      currentStep,\n      skipModalVisible\n    } = this.state;\n    const { system, version } = this.getSystemVersion();\n    this.generateStepsContent();\n    return (\n      <Spin spinning={loading}>\n        <div className=\"select-system-config\">\n          <div>\n            <Steps current={currentStep}>\n              {this.steps.map(step => (\n                <Step\n                  key={step.title}\n                  title={step.title}\n                  description={step.desc}\n                />\n              ))}\n            </Steps>\n          </div>\n\n          <Divider />\n\n          <div className=\"select-system-config__step-content\">\n            {this.steps[currentStep].content}\n          </div>\n          <div\n            className=\"\n            select-system-config__steps-action\"\n          >\n            <Button\n              type=\"primary\"\n              disabled={currentStep === 0}\n              onClick={this.handleCreate}\n            >\n              创建\n            </Button>\n            <Button disabled={currentStep === 1} onClick={this.handleNextStep}>\n              下一步\n            </Button>\n\n            <Button disabled={currentStep === 0} onClick={this.handlePreStep}>\n              上一步\n            </Button>\n          </div>\n        </div>\n        <Modal\n          title=\"所选系统及系统配置\"\n          visible={this.state.modalVisible}\n          onOk={this.handleOk}\n          onCancel={() => this.setState({ modalVisible: false })}\n          okText=\"确定\"\n          cancelText=\"取消\"\n        >\n          <Spin spinning={okLoading}>\n            <SystemConfiguration\n              system={system}\n              version={version}\n              innerPort={this._values.port}\n              cpu={this._values.cpu}\n              mem={this._values.mem}\n              timeout={this._values.timeout}\n            />\n          </Spin>\n        </Modal>\n      </Spin>\n    );\n  }\n}\n\nexport default SelectSystemConfig;\n","import SelectSystemConfig from './SelectSystemConfig';\nexport default SelectSystemConfig;","import React, { Component } from \"react\";\nimport \"./App.scss\";\nimport Typed from \"typed.js\";\nimport { getOSList, getOSUrl, removeContainerById } from \"./util/api\";\nimport LoadingScreen from \"react-loading-screen\";\n\nimport { getItem, setItem, rmItem } from \"./util/util\";\nimport { Button, Tooltip, Divider, Card, Modal } from \"antd\";\nimport SelectSystemConfig from \"./components/SelectSystemConfig\";\nimport SystemConfiguration from \"./components/SystemConfiguration\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    const { isExistContainer, container } = this.isExistContainer();\n\n    this.state = {\n      open: false,\n      osList: [],\n      selectedVersion: {},\n      selectedOS: {},\n      timeout: 24,\n      cpu: 1,\n      memory: 512,\n      port: 80,\n      container,\n      isExistContainer,\n      screenLoading: false,\n      externalPort: 0, // 外部端口（后端返回的端口号）\n      port: 0, // 内部端口（填写表单填写的端口号）\n      skipModalVisible: false\n    };\n  }\n\n  componentDidMount = () => {\n    this.getOSList();\n    this.subscribeEvent();\n\n    this.typed = new Typed(\".app__desc-content\", {\n      strings: [\n        `Want to experiment with something on a Linux distribution? Let's start!`\n      ],\n      typeSpeed: 50\n    });\n  };\n\n  componentWillUnmount = () => {};\n\n  isExistContainer = () => {\n    let containerInfo = getItem(\"containerInfo\");\n    if (!containerInfo) {\n      return { isExistContainer: false, container: {} };\n    }\n    containerInfo = JSON.parse(containerInfo);\n    const curTime = Math.floor(new Date().getTime() / 1000);\n    // 未过期\n    if (curTime < containerInfo.timeout) {\n      return { isExistContainer: true, container: containerInfo };\n    }\n  };\n\n  subscribeEvent = () => {};\n\n  getOSList = async () => {\n    this.p1 = getOSList();\n    let res;\n    try {\n      res = await this.p1.promise;\n    } catch (err) {\n      return console.error(err);\n    }\n    const osList = res;\n    if (osList.length) {\n      osList[0].selected = true;\n    }\n    this.setState({ osList });\n  };\n\n  handleStartClick = () => {};\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleOSSelect = selectedOS => {\n    const osList = [...this.state.osList];\n\n    const i = osList.findIndex(os => selectedOS.label === os.label);\n\n    osList.forEach((os, j) => {\n      if (i === j) {\n        os.selected = false;\n      }\n      os.selected = i === j;\n    });\n    this.setState({ osList });\n  };\n\n  handleOSVersionSelect = (selectedOS, selectedVersion) => {\n    this.setState({\n      open: true,\n      selectedOS,\n      selectedVersion\n    });\n  };\n\n  handleSelectAgain = async () => {\n    this.setState({ screenLoading: true, screenText: \"删除中...\" });\n    const { container } = this.state;\n    const timestamp = Math.floor(new Date().getTime() / 1000);\n    this.p3 = removeContainerById(\n      container.containerId,\n      container.shareUrl,\n      timestamp\n    );\n    let res;\n    try {\n      res = await this.p3.promise;\n    } catch (err) {\n      return console.error(err);\n    }\n    if (res.statusCode !== 1) {\n      this.setState({ screenLoading: false });\n      return console.error(res.message);\n    }\n    this.setState({\n      isExistContainer: false,\n      container: {},\n      screenLoading: false\n    });\n    rmItem(\"containerInfo\");\n  };\n\n  handleOkCallback = () => {\n    const { isExistContainer, container } = this.isExistContainer();\n    this.setState({ isExistContainer, container, skipModalVisible: true });\n  };\n\n  render() {\n    const {\n      isExistContainer,\n      screenLoading,\n      screenText,\n      externalPort,\n      port,\n      container\n    } = this.state;\n    return (\n      <LoadingScreen\n        loading={screenLoading}\n        bgColor=\"#d0d0d0\"\n        spinnerColor=\"#252525\"\n        textColor=\"#676767\"\n        text={screenText}\n      >\n        <div className=\"app\">\n          <h1 className=\"app__title\">\n            <span className=\"app__title-span\">\n              Super Inspire\n              {/* <span className=\"app__title-icon\" /> */}\n            </span>\n          </h1>\n          <div className=\"app__desc\">\n            <div className=\"app__text-editor-wrap\">\n              <div className=\"app__title-bar\">\n                Arch\n                Linux/Debian/CentOS/Defora/Ubuntu/Ubuntu衍生版/Deepin/LineageOS/openSUSE\n              </div>\n              <div className=\"app__text-body\">\n                <span style={{ marginRight: 10 }}>$</span>\n                <span className=\"app__desc-content\" />\n              </div>\n            </div>\n          </div>\n\n          <Divider style={{ marginTop: 100 }}>\n            {isExistContainer ? \"您已创建系统\" : \"选择系统配置\"}\n          </Divider>\n\n          {isExistContainer && (\n            <Card>\n              <div className=\"app__ports\">\n                <SystemConfiguration\n                  showInnerPort\n                  showExternalPort\n                  system={container.system}\n                  version={container.version}\n                  cpu={container.cpu}\n                  mem={container.mem}\n                  timeout={container.timeoutH}\n                  innerPort={container.innerPort}\n                  externalPort={container.externalPort}\n                />\n              </div>\n            </Card>\n          )}\n\n          <div className=\"app__os-list\">\n            {isExistContainer ? (\n              <div style={{ marginTop: 20, textAlign: \"center\" }}>\n                <Tooltip title=\"若打开的页面报错，请重新点击\">\n                  <Button\n                    size=\"large\"\n                    color=\"primary\"\n                    variant=\"outlined\"\n                    onClick={() => {\n                      const containerInfo = JSON.parse(\n                        getItem(\"containerInfo\")\n                      );\n                      window.open(containerInfo.shareUrl);\n                    }}\n                    style={{ margin: 10 }}\n                  >\n                    打开已创建的系统\n                  </Button>\n                </Tooltip>\n\n                <Button\n                  size=\"large\"\n                  color=\"secondary\"\n                  variant=\"outlined\"\n                  onClick={this.handleSelectAgain}\n                  style={{ margin: 10 }}\n                >\n                  重新选择\n                </Button>\n              </div>\n            ) : (\n              <SelectSystemConfig okCallback={this.handleOkCallback} />\n            )}\n          </div>\n        </div>\n        <Modal\n          title=\"提示\"\n          visible={this.state.skipModalVisible}\n          onOk={() => {\n            window.open(this.state.container.shareUrl);\n            this.setState({ skipModalVisible: false });\n          }}\n          okText=\"确定\"\n          cancelText=\"取消\"\n          onCancel={() => this.setState({ skipModalVisible: false })}\n        >\n          <p>系统已创建，是否跳转到系统页面？</p>\n        </Modal>\n      </LoadingScreen>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}